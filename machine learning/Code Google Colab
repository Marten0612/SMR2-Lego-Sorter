!git clone https://github.com/ultralytics/yolov5  # clone
%cd yolov5
%pip install -qr requirements.txt  # install

import torch
import utils
display = utils.notebook_init()  # checks


%cd /content/yolov5/
!python detect.py --weights yolov5s.pt --img 640 --conf 0.25 --source data/images
#display.Image(filename='runs/detect/exp/zidane.jpg', width=600)

# Download Roboflow Train data
%cd /content/
!curl -L "https://app.roboflow.com/ds/CeE9gWJL8A?key=lwZog4k3Bg" > roboflow.zip; unzip roboflow.zip; rm roboflow.zip

# Tensorboard  (optional)
%load_ext tensorboard
%tensorboard --logdir runs/train

# Weights & Biases  (optional)
%pip install -q wandb
import wandb
wandb.login()

# Train YOLOv5s on COCO128 for 3 epochs
#!python train.py --img 640 --batch 16 --epochs 3 --data coco128.yaml --weights yolov5s.pt --cache
%cd /content/yolov5/
!python train.py --img 480 --batch 16 --epochs 100 --data ../data.yaml --weights yolov5s.pt --nosave --cache

# 3.1 Inference
import os
traindirs = os.listdir("/content/yolov5/runs/train/")
traindir = traindirs[-1]
print(traindir)
!python detect.py --weights /content/yolov5/runs/train/"$traindir"/weights/last.pt --img 480 --conf 0.9 --source /content/valid/images/

# Random image never seen before
traindirs = os.listdir("/content/yolov5/runs/train/")
traindir = traindirs[-1]
!python detect.py --weights /content/yolov5/runs/train/"$traindir"/weights/last.pt --img 640 --conf 0.50 --source /content/test/images/



