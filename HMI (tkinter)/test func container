import tkinter  as tk 
#from tkinter import ttk
from tkinter import *
from PIL import Image, ImageTk

#Open window
window = tk.Tk()
window.title('BSL Bricks')
window.geometry('1600x800')
window.resizable(True, True)
window.configure(background = 'white')

#Logo
file_logo = "C:\\Users\\Wendy Exterkate\\OneDrive\\Documenten\\GitHub\\SMR2-Lego-Sorter\\HMI (tkinter)\\red-lego-background.jpg"
canvas = Canvas(window, width = 1600, height = 100)
img = ImageTk.PhotoImage(Image.open(file_logo))
canvas.pack()
canvas.create_image(0, 0, image = img)
canvas.create_image(900, 0, image = img)
canvas.create_image(1800, 0, image = img)
canvas.create_text(800, 50, text = "BSL BRICKS", font = ('Helvetica 40 bold'), fill = 'white')

#functions of the buttons
def start():
    size_Lego = variable_inputsize.get()
    containerList = [None] * 8
    for i in range(total_containers):
        containerList[i] = globals()[f"variable_container_{i+1}"].get()
    
    print(size_Lego)
    print(containerList)

    print("De machine start met sorteren.")
    #machine_learning_function(size_Lego, containerList)

#Main labels
label_welcome = tk.Label(text = "Welcome", font = ('Helvetica 30 bold'), fg = 'red', bg = 'white')
label_welcome.pack(side = 'top')
label_welcome.place(x = 700, y = 120)
label_size = tk.Label(text = "1. Please select your input size:", font = ('Helvetica 20'), fg = 'black', bg = 'white')
label_size.pack(side = 'top')
label_size.place(x = 100, y = 200)
label_containers = tk.Label(text = "2. Please select which LEGO you want in which container:", font = ('Helvetica 20'), fg = 'black', bg = 'white')
label_containers.pack(side = 'top')
label_containers.place(x = 100, y = 350)
Label_start_button = tk.Label(text = "3. Press me!", font = ('Helvetica 20'), fg = 'black', bg = 'white')
Label_start_button.pack(side = 'top')
Label_start_button.place(x = 1000, y = 300)

#Buttons
start_button = Button(window, text = "Start\n sorting", command = start, height = 2, width = 10, bg = "red", fg = 'white', 
                      font = "Helvetica 30 bold", borderwidth = 10).place(x=1000, y=350)

#Variables
total_containers = 8
variable_inputsize = StringVar(window)
variable_inputsize.set("Size") # default value
for i in range(total_containers):
    globals()[f"variable_container_{i+1}"] = StringVar(window)
    globals()[f"variable_container_{i+1}"].set("None")

#Optionmenus 
OptionList_inputsize = ["tray 2", "tray 3 to 5", "tray 6"]  
OptionList_mainclasses = ["Brick", "Block", "Plate", "Sheet", "Tile", "None"]
#Inputsize
opt_inputsize = tk.OptionMenu(window, variable_inputsize, *OptionList_inputsize)
opt_inputsize.config(width = 10, font = ('Helvetica', 12))
opt_inputsize.pack(side = 'top')
opt_inputsize.pack()
opt_inputsize.place(x = 100, y = 250)

loc_container_1 = (100, 430)
afstand_x = 200
afstand_y = 100
afstand_label = 30
#Containers
for i in range(total_containers):
    if i / 2 <= 1:
        loc_x = loc_container_1[0]
    elif i / 2 <= 2:
        loc_x = loc_container_1[0] + afstand_x
    elif i / 2 <= 3:
        loc_x = loc_container_1[0] + 2 * afstand_x
    elif i / 2 <= 4:
        loc_x = loc_container_1[0] + 3 * afstand_x
    else:
        print("This has not yet been made.")

    if i % 2 == 0:
        loc_y = loc_container_1[1] + afstand_y
    else:
        loc_y = loc_container_1[1]

    globals()[f"opt_container_{i+1}"] = tk.OptionMenu(window, globals()[f"variable_container_{i+1}"], *OptionList_mainclasses)
    globals()[f"opt_container_{i+1}"].config(width = 10, font = ('Helvetica', 12))
    globals()[f"opt_container_{i+1}"].pack(side = 'top')
    globals()[f"opt_container_{i+1}"].pack()
    globals()[f"opt_container_{i+1}"].place(x = loc_x, y = loc_y)

    globals()[f"label_container_{i+1}"] = tk.Label(text = "container " + str(i), font = ('Helvetica', 12), fg = 'red', bg = 'white')
    globals()[f"label_container_{i+1}"].pack(side = 'top')
    globals()[f"label_container_{i+1}"].place(x = loc_x, y = loc_y - afstand_label)

''' 
#container 1
opt_container_1 = tk.OptionMenu(window, variable_container_1, *OptionList_mainclasses)
opt_container_1.config(width = 10, font = ('Helvetica', 12))
opt_container_1.pack(side = 'top')
opt_container_1.pack()
opt_container_1.place(x = 100, y = 430)
label_container_1 = tk.Label(text = "container 1", font = ('Helvetica', 12), fg = 'red', bg = 'white')
label_container_1.pack(side = 'top')
label_container_1.place(x = 100, y = 400)
#container 2
opt_container_2 = tk.OptionMenu(window, variable_container_2, *OptionList_mainclasses)
opt_container_2.config(width = 10, font = ('Helvetica', 12))
opt_container_2.pack(side = 'top')
opt_container_2.pack()
opt_container_2.place(x = 300, y = 430)
label_container_2 = tk.Label(text = "container 2", font = ('Helvetica', 12), fg = 'red', bg = 'white')
label_container_2.pack(side = 'top')
label_container_2.place(x = 300, y = 400)
#container 3
opt_container_3 = tk.OptionMenu(window, variable_container_3, *OptionList_mainclasses)
opt_container_3.config(width = 10, font = ('Helvetica', 12))
opt_container_3.pack(side = 'top')
opt_container_3.pack()
opt_container_3.place(x = 500, y = 430)
label_container_3 = tk.Label(text = "container 3", font = ('Helvetica', 12), fg = 'red', bg = 'white')
label_container_3.pack(side = 'top')
label_container_3.place(x = 500, y = 400)
#container 4
opt_container_4 = tk.OptionMenu(window, variable_container_4, *OptionList_mainclasses)
opt_container_4.config(width = 10, font = ('Helvetica', 12))
opt_container_4.pack(side = 'top')
opt_container_4.pack()
opt_container_4.place(x = 700, y = 430)
label_container_4 = tk.Label(text = "container 4", font = ('Helvetica', 12), fg = 'red', bg = 'white')
label_container_4.pack(side = 'top')
label_container_4.place(x = 700, y = 400)
#container 5
opt_container_5 = tk.OptionMenu(window, variable_container_5, *OptionList_mainclasses)
opt_container_5.config(width = 10, font = ('Helvetica', 12))
opt_container_5.pack(side = 'top')
opt_container_5.pack()
opt_container_5.place(x = 100, y = 530)
label_container_5 = tk.Label(text = "container 5", font = ('Helvetica', 12), fg = 'red', bg = 'white')
label_container_5.pack(side = 'top')
label_container_5.place(x = 100, y = 500)
#container 6
opt_container_6 = tk.OptionMenu(window, variable_container_6, *OptionList_mainclasses)
opt_container_6.config(width = 10, font = ('Helvetica', 12))
opt_container_6.pack(side = 'top')
opt_container_6.pack()
opt_container_6.place(x = 300, y = 530)
label_container_6 = tk.Label(text = "container 6", font = ('Helvetica', 12), fg = 'red', bg = 'white')
label_container_6.pack(side = 'top')
label_container_6.place(x = 300, y = 500)
#container 7
opt_container_7 = tk.OptionMenu(window, variable_container_7, *OptionList_mainclasses)
opt_container_7.config(width = 10, font = ('Helvetica', 12))
opt_container_7.pack(side = 'top')
opt_container_7.pack()
opt_container_7.place(x = 500, y = 530)
label_container_7 = tk.Label(text = "container 7", font = ('Helvetica', 12), fg = 'red', bg = 'white')
label_container_7.pack(side = 'top')
label_container_7.place(x = 500, y = 500)
#container 8
opt_container_8 = tk.OptionMenu(window, variable_container_8, *OptionList_mainclasses)
opt_container_8.config(width = 10, font = ('Helvetica', 12))
opt_container_8.pack(side = 'top')
opt_container_8.pack()
opt_container_8.place(x = 700, y = 530)
label_container_8 = tk.Label(text = "container 8", font = ('Helvetica', 12), fg = 'red', bg = 'white')
label_container_8.pack(side = 'top')
label_container_8.place(x = 700, y = 500)
'''
window.mainloop()

